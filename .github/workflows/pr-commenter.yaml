name: pr-validation-trigger

on:
  pull_request_target:
    branches:
      - main
      
jobs:
  comment:
    # Do not trigger if pull request is draft or not a fork
    if: |
      github.event.pull_request.draft == false && github.event.pull_request.head.repo.full_name == 'joakimstrandberg/pipeline'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - run: |
          changedFiles=($(gh pr view ${{ github.event.pull_request.number }} --json files -q '.files[].path'))

          FILTER="*validation.yaml"
          echo "testtest"
          for f in "${changedFiles[@]}"
          do
              echo "$f"
              echo "---"
              if [[ $f == $FILTER ]]
              then
                  echo "Found change in file ${f}"
                  echo "pipelineChanged=true" >> $GITHUB_OUTPUT
                  exit 1
              fi
          done
          echo "pipelineChanged=false" >> $GITHUB_OUTPUT
        name: Check changed files
        id: checkchangedfiles
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - id: pipelinenames
        if: ${{ steps.checkchangedfiles.outputs.pipelineChanged }} == false
        name: Get pipeline names
        run: echo "pipelines=one, two" >> $GITHUB_OUTPUT
      - id: azprun
        if: ${{ steps.checkchangedfiles.outputs.pipelineChanged }} == false
        name: Trigger pipelines with comment
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.COMMENTER_TOKEN_2}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '/azp run ${{ steps.pipelinenames.outputs.pipelines }}'
            })
 #     - id: debug
 #       if: ${{ steps.checkchangedfiles.outputs.pipelineChanged }} == false
 ##       name: Get required status checks
 #       uses: actions/github-script@v6
 #       with:
 #         github-token: ${{secrets.COMMENTER_TOKEN_2}}
 #         script: |
 #           const result = await github.rest.repos.getBranch({
 #             owner: context.repo.owner,
 #             repo: context.repo.repo,
 #             branch: "main"
 #           });
 #           checks = result.data.protection.required_status_checks.checks
            
